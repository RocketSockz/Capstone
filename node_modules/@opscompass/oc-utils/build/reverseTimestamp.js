"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.reverseTimestamp = void 0;
/**
 * Get a descending time timestamp, where 0 is hundreds of thousands of years in the future.
 * @param date (optional) The date to calculate the timestamp for. If not present, the current timestamp will be used.
 * @returns A 16-digit string representing the number of milliseconds until our epoch hits 0
 * @description We use this as the RowKey in our Storage (such as DynamoDB or Table Storage) so that we can get the latest record with
 * a "top 1" query on the partition key.
 */
function reverseTimestamp(date) {
    var end = new Date(8640000000000000);
    var now = date || new Date();
    var diff = end.getTime() - now.getTime();
    return diff.toString().padStart(16, "0");
}
exports.reverseTimestamp = reverseTimestamp;
//# sourceMappingURL=reverseTimestamp.js.map