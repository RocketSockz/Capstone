import { Log } from "./log";
/**
 * Level of logging to write
 */
export declare enum LoggingLevel {
    /**
     * Log everything
     */
    trace = 0,
    /**
     * Log info, warnings and errors
     */
    info = 1,
    /**
     * Log warning and errors only
     */
    warn = 2,
    /**
     * Log errors only
     */
    error = 3,
    /**
     * Don't log anything. for use with instrumentation
     */
    none = 9
}
/**
 * Write to the log if at the appropriate logging level
 */
export declare class Logger implements Log {
    private underlyingLogger;
    private loggingLevel;
    private instrumentationLoggingLevel;
    constructor(underlyingLogger: Log, loggingLevel: LoggingLevel, instrumentationLoggingLevel: LoggingLevel);
    /**
     * Log a trace message
     */
    trace(message?: any, ...additional: any[]): void;
    /**
     * Log an informational message
     */
    info(message?: any, ...additional: any[]): void;
    /**
     * Log a warning message
     */
    warn(message?: any, ...additional: any[]): void;
    /**
     * Log an error message
     */
    error(message?: any, ...additional: any[]): void;
    /**
     * Log an instrument tagged message
     */
    instrument(level: LoggingLevel, message?: any, ...additional: any[]): void;
}
