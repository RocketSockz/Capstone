# This file is a template, and might need editing before it works on your project.
# Official framework image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/node/tags/
image: node:14

# Pick zero or more services to be used on all builds.
# Only needed when using a docker container to run your tests in.
# Check out: http://docs.gitlab.com/ce/ci/docker/using_docker_images.html#what-is-a-service
#services:
#  - mysql:latest
#  - redis:latest
#  - postgres:latest

# This folder is cached between builds
# http://docs.gitlab.com/ce/ci/yaml/README.html#cache
cache:
  paths:
    - node_modules/

stages:
  - test
  - release

jest:
  stage: test
  only:
    - branches
  tags:
    - nodejs
  script:
    - echo '//registry.npmjs.org/:_authToken=${NPM_TOKEN}'>.npmrc
    - yarn install
    - yarn test
  artifacts:
    paths:
      - coverage

release:
  stage: release
  tags:
    - nodejs
  script:
    - echo "Releasing New Patch Version"
    - echo '//registry.npmjs.org/:_authToken=${NPM_TOKEN}'>.npmrc
    - yarn install
    - export CI_PUSH_REPO=`echo $CI_REPOSITORY_URL | perl -pe 's#.*@(.+?(\:\d+)?)/#\1:#' | sed 's/:/\//g'`
    - git config --global user.email "${GITLAB_USER}@opscompass.com"
    - git config --global user.name "${GITLAB_USER}"
    - git remote rm origin
    - git remote add origin https://${GITLAB_USER}:${GITLAB_TOKEN}@${CI_PUSH_REPO}
    - git fetch --all
    - git checkout main
    - git tag -l | xargs git tag -d
    - git branch --set-upstream-to origin/main
    - git reset --hard origin/main
    - yarn tsc
    - npx release-it patch --ci -VV
  only:
    - main
